package com.hemandroid.bottomnavigationview;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.internal.BottomNavigationItemView;
import android.support.design.internal.BottomNavigationMenuView;
import android.support.design.widget.BottomNavigationView;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.MenuItem;
import android.widget.TextView;

import com.hemandroid.bottomnavigationview.fragments.DashBoardFragment;
import com.hemandroid.bottomnavigationview.fragments.HomeFragment;
import com.hemandroid.bottomnavigationview.fragments.NotificationFragment;

import java.lang.reflect.Field;

public class MainActivity extends AppCompatActivity {

    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        /** Here we are replacing the frame layout with the Home fragment
         * As pre-loading page in OnCreate of the MainActivity*/
        replaceFragment(new HomeFragment(), getString(R.string.title_home));

        bottomNavigationClickListener(); /** Assigning the onclick functionality*/

        initViewListener(); /** View Listeners to assign onclicks for the widgets*/
    }

    private void initViewListener(){
        BottomNavigationView navigation = findViewById(R.id.navigation);
        /** Here we are removing the default shift mode.
         * To know more about the default shift mode, how it would behaves.
         * Just comment out the below line of code to check the default shift mode action*/
        BottomNavigationViewHelper.removeShiftMode(navigation);
        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
    }

    private void bottomNavigationClickListener(){
        mOnNavigationItemSelectedListener = new BottomNavigationView.OnNavigationItemSelectedListener() {
            @Override
            public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                switch (item.getItemId()) {
                    case R.id.navigation_home:
                        replaceFragment(new HomeFragment(), getString(R.string.title_home));
                        return true;
                    case R.id.navigation_dashboard:
                        replaceFragment(new DashBoardFragment(), getString(R.string.title_dashboard));
                        return true;
                    case R.id.navigation_notifications:
                        replaceFragment(new NotificationFragment(), getString(R.string.title_notifications));
                        return true;
                }
                return false;
            }
        };
    }

    /** Below Innerclass is used to control the default shifting mode
     * generated by BottomNavigationView*/

    static class BottomNavigationViewHelper {

        @SuppressLint("RestrictedApi")
        static void removeShiftMode(BottomNavigationView view) {
            BottomNavigationMenuView menuView = (BottomNavigationMenuView) view.getChildAt(0);
            try {
                Field shiftingMode = menuView.getClass().getDeclaredField("mShiftingMode");
                shiftingMode.setAccessible(true);
                shiftingMode.setBoolean(menuView, false);
                shiftingMode.setAccessible(false);
                for (int i = 0; i < menuView.getChildCount(); i++) {
                    BottomNavigationItemView item = (BottomNavigationItemView) menuView.getChildAt(i);
                    item.setShiftingMode(false);
                    // set once again checked value, so view will be updated
                    item.setChecked(item.getItemData().isChecked());
                }
            } catch (NoSuchFieldException e) {
                Log.e("ERROR NO SUCH FIELD", "Unable to get shift mode field");
            } catch (IllegalAccessException e) {
                Log.e("ERROR ILLEGAL ALG", "Unable to change value of shift mode");
            }
        }
    }


    /** Below is the method where we can used to replace the fragments and
     * Adding those fragments in backstack for better back navigation */
    public void replaceFragment(Fragment fragment, String strTag) {
        FragmentManager fragmentManager = getSupportFragmentManager();
        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
        fragmentTransaction.replace(R.id.container_fragment, fragment, strTag);
        fragmentTransaction.commit();
    }

    @Override
    public void onBackPressed() {
        super.onBackPressed();
    }
}
